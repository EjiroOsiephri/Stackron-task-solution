openapi: 3.0.0
info:
  title: Product and Cart API
  version: 1.0.0
  description: API for managing products and carts
servers:
  - url: http://localhost:8000/api
paths:
  /products:
    post:
      summary: Create a new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                imageUrl:
                  type: string
                category:
                  type: string
      responses:
        "200":
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  imageUrl:
                    type: string
                  category:
                    type: string
    get:
      summary: List all products
      tags:
        - Products
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                      format: float
                    imageUrl:
                      type: string
                    category:
                      type: string
  /products/{id}:
    get:
      summary: Get a product by ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  imageUrl:
                    type: string
                  category:
                    type: string
        "404":
          description: Product not found
    put:
      summary: Update a product
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                imageUrl:
                  type: string
                category:
                  type: string
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: float
                  imageUrl:
                    type: string
                  category:
                    type: string
        "404":
          description: Product not found
  /cart:
    post:
      summary: Add a product to the cart
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productId
                - quantity
              properties:
                productId:
                  type: integer
                quantity:
                  type: integer
      responses:
        "200":
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  productId:
                    type: integer
                  quantity:
                    type: integer
        "404":
          description: Product not found
    get:
      summary: List all cart items
      tags:
        - Cart
      responses:
        "200":
          description: A list of cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                    quantity:
                      type: integer
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
